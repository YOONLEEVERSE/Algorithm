

def solution(msg):
    answer = []
    #dict = [{None:None}]
    asciiOfA = ord("A")
    #dict.extend([chr(asciiOfA+i) for i in range(26)])
    dict = {chr(asciiOfA+i):i+1 for i in range(26)}

    print(dict)

    def find_longgest(idx,longgestLen):
        for dictLen in range(longgestLen, 0, -1):
            keyword = msg[idx:idx+dictLen]
            if (keyword in dict):
                return (dict[keyword],keyword,dictLen)

    def recursive(idx,longgestLen):
        if(idx>=len(msg)):
            return
        index, keyword, skipLen = find_longgest(idx,longgestLen)

        answer.append(index)
        if(len(msg)>idx+skipLen and not keyword+msg[idx+skipLen] in dict):
            longgestLen = longgestLen if longgestLen >= len(keyword) + 1 else len(keyword) + 1
            dict[keyword+msg[idx+skipLen]] = len(dict)+1

        recursive(idx+skipLen,longgestLen)
    recursive(0,1)


    return answer



result =solution

print(result)